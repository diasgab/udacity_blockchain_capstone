{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.15+commit.6a57276f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"methods\":{},\"title\":\"Counters\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
  "bytecode": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205dcb3a9ddd389baadca4b98a325f56f7cdc77553ec63cdcda6f982b2ccfba59164736f6c634300050f0032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205dcb3a9ddd389baadca4b98a325f56f7cdc77553ec63cdcda6f982b2ccfba59164736f6c634300050f0032",
  "sourceMap": "629:848:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "629:848:8:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../math/SafeMath.sol\";\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n * directly accessed.\n */\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n",
  "sourcePath": "openzeppelin-solidity/contracts/drafts/Counters.sol",
  "ast": {
    "absolutePath": "openzeppelin-solidity/contracts/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        8744
      ]
    },
    "id": 8745,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8697,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 8698,
        "nodeType": "ImportDirective",
        "scope": 8745,
        "sourceUnit": 9020,
        "src": "25:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
        "id": 8744,
        "linearizedBaseContracts": [
          8744
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8701,
            "libraryName": {
              "contractScope": null,
              "id": 8699,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9019,
              "src": "658:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$9019",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "652:27:8",
            "typeName": {
              "id": 8700,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "671:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 8704,
            "members": [
              {
                "constant": false,
                "id": 8703,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 8704,
                "src": "1024:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8702,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1024:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 8744,
            "src": "685:374:8",
            "visibility": "public"
          },
          {
            "body": {
              "id": 8714,
              "nodeType": "Block",
              "src": "1139:38:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 8711,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8706,
                      "src": "1156:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$8704_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 8712,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8703,
                    "src": "1156:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8710,
                  "id": 8713,
                  "nodeType": "Return",
                  "src": "1149:21:8"
                }
              ]
            },
            "documentation": null,
            "id": 8715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8706,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 8715,
                  "src": "1082:23:8",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$8704_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8705,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8704,
                    "src": "1082:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$8704_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1081:25:8"
            },
            "returnParameters": {
              "id": 8710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8709,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8715,
                  "src": "1130:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1130:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1129:9:8"
            },
            "scope": 8744,
            "src": "1065:112:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8726,
              "nodeType": "Block",
              "src": "1236:125:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8720,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8717,
                        "src": "1335:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$8704_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 8722,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8703,
                      "src": "1335:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 8723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1353:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1335:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8725,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:19:8"
                }
              ]
            },
            "documentation": null,
            "id": 8727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8717,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 8727,
                  "src": "1202:23:8",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$8704_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8716,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8704,
                    "src": "1202:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$8704_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1201:25:8"
            },
            "returnParameters": {
              "id": 8719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1236:0:8"
            },
            "scope": 8744,
            "src": "1183:178:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8742,
              "nodeType": "Block",
              "src": "1420:55:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8732,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8729,
                        "src": "1430:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$8704_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 8734,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8703,
                      "src": "1430:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 8738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1466:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8735,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8729,
                            "src": "1447:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$8704_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 8736,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8703,
                          "src": "1447:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8875,
                        "src": "1447:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1447:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1430:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8741,
                  "nodeType": "ExpressionStatement",
                  "src": "1430:38:8"
                }
              ]
            },
            "documentation": null,
            "id": 8743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8729,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 8743,
                  "src": "1386:23:8",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$8704_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8728,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8704,
                    "src": "1386:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$8704_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1385:25:8"
            },
            "returnParameters": {
              "id": 8731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:8"
            },
            "scope": 8744,
            "src": "1367:108:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 8745,
        "src": "629:848:8"
      }
    ],
    "src": "0:1478:8"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "openzeppelin-solidity/contracts/drafts/Counters.sol",
      "exportedSymbols": {
        "Counters": [
          8744
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 8697,
        "name": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "attributes": {
          "SourceUnit": 9020,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "../math/SafeMath.sol",
          "scope": 8745,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 8698,
        "name": "ImportDirective",
        "src": "25:30:8"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "library",
          "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            8744
          ],
          "name": "Counters",
          "scope": 8745
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 9019,
                  "type": "library SafeMath"
                },
                "id": 8699,
                "name": "UserDefinedTypeName",
                "src": "658:8:8"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 8700,
                "name": "ElementaryTypeName",
                "src": "671:7:8"
              }
            ],
            "id": 8701,
            "name": "UsingForDirective",
            "src": "652:27:8"
          },
          {
            "attributes": {
              "canonicalName": "Counters.Counter",
              "name": "Counter",
              "scope": 8744,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_value",
                  "scope": 8704,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 8702,
                    "name": "ElementaryTypeName",
                    "src": "1024:7:8"
                  }
                ],
                "id": 8703,
                "name": "VariableDeclaration",
                "src": "1024:14:8"
              }
            ],
            "id": 8704,
            "name": "StructDefinition",
            "src": "685:374:8"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "current",
              "scope": 8744,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "counter",
                      "scope": 8715,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct Counters.Counter",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Counter",
                          "referencedDeclaration": 8704,
                          "type": "struct Counters.Counter"
                        },
                        "id": 8705,
                        "name": "UserDefinedTypeName",
                        "src": "1082:7:8"
                      }
                    ],
                    "id": 8706,
                    "name": "VariableDeclaration",
                    "src": "1082:23:8"
                  }
                ],
                "id": 8707,
                "name": "ParameterList",
                "src": "1081:25:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 8715,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 8708,
                        "name": "ElementaryTypeName",
                        "src": "1130:7:8"
                      }
                    ],
                    "id": 8709,
                    "name": "VariableDeclaration",
                    "src": "1130:7:8"
                  }
                ],
                "id": 8710,
                "name": "ParameterList",
                "src": "1129:9:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 8710
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "_value",
                          "referencedDeclaration": 8703,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8706,
                              "type": "struct Counters.Counter storage pointer",
                              "value": "counter"
                            },
                            "id": 8711,
                            "name": "Identifier",
                            "src": "1156:7:8"
                          }
                        ],
                        "id": 8712,
                        "name": "MemberAccess",
                        "src": "1156:14:8"
                      }
                    ],
                    "id": 8713,
                    "name": "Return",
                    "src": "1149:21:8"
                  }
                ],
                "id": 8714,
                "name": "Block",
                "src": "1139:38:8"
              }
            ],
            "id": 8715,
            "name": "FunctionDefinition",
            "src": "1065:112:8"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "increment",
              "scope": 8744,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "counter",
                      "scope": 8727,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct Counters.Counter",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Counter",
                          "referencedDeclaration": 8704,
                          "type": "struct Counters.Counter"
                        },
                        "id": 8716,
                        "name": "UserDefinedTypeName",
                        "src": "1202:7:8"
                      }
                    ],
                    "id": 8717,
                    "name": "VariableDeclaration",
                    "src": "1202:23:8"
                  }
                ],
                "id": 8718,
                "name": "ParameterList",
                "src": "1201:25:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8719,
                "name": "ParameterList",
                "src": "1236:0:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_value",
                              "referencedDeclaration": 8703,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8717,
                                  "type": "struct Counters.Counter storage pointer",
                                  "value": "counter"
                                },
                                "id": 8720,
                                "name": "Identifier",
                                "src": "1335:7:8"
                              }
                            ],
                            "id": 8722,
                            "name": "MemberAccess",
                            "src": "1335:14:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 8723,
                            "name": "Literal",
                            "src": "1353:1:8"
                          }
                        ],
                        "id": 8724,
                        "name": "Assignment",
                        "src": "1335:19:8"
                      }
                    ],
                    "id": 8725,
                    "name": "ExpressionStatement",
                    "src": "1335:19:8"
                  }
                ],
                "id": 8726,
                "name": "Block",
                "src": "1236:125:8"
              }
            ],
            "id": 8727,
            "name": "FunctionDefinition",
            "src": "1183:178:8"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "decrement",
              "scope": 8744,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "counter",
                      "scope": 8743,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct Counters.Counter",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Counter",
                          "referencedDeclaration": 8704,
                          "type": "struct Counters.Counter"
                        },
                        "id": 8728,
                        "name": "UserDefinedTypeName",
                        "src": "1386:7:8"
                      }
                    ],
                    "id": 8729,
                    "name": "VariableDeclaration",
                    "src": "1386:23:8"
                  }
                ],
                "id": 8730,
                "name": "ParameterList",
                "src": "1385:25:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8731,
                "name": "ParameterList",
                "src": "1420:0:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_value",
                              "referencedDeclaration": 8703,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8729,
                                  "type": "struct Counters.Counter storage pointer",
                                  "value": "counter"
                                },
                                "id": 8732,
                                "name": "Identifier",
                                "src": "1430:7:8"
                              }
                            ],
                            "id": 8734,
                            "name": "MemberAccess",
                            "src": "1430:14:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sub",
                                  "referencedDeclaration": 8875,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "_value",
                                      "referencedDeclaration": 8703,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 8729,
                                          "type": "struct Counters.Counter storage pointer",
                                          "value": "counter"
                                        },
                                        "id": 8735,
                                        "name": "Identifier",
                                        "src": "1447:7:8"
                                      }
                                    ],
                                    "id": 8736,
                                    "name": "MemberAccess",
                                    "src": "1447:14:8"
                                  }
                                ],
                                "id": 8737,
                                "name": "MemberAccess",
                                "src": "1447:18:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 8738,
                                "name": "Literal",
                                "src": "1466:1:8"
                              }
                            ],
                            "id": 8739,
                            "name": "FunctionCall",
                            "src": "1447:21:8"
                          }
                        ],
                        "id": 8740,
                        "name": "Assignment",
                        "src": "1430:38:8"
                      }
                    ],
                    "id": 8741,
                    "name": "ExpressionStatement",
                    "src": "1430:38:8"
                  }
                ],
                "id": 8742,
                "name": "Block",
                "src": "1420:55:8"
              }
            ],
            "id": 8743,
            "name": "FunctionDefinition",
            "src": "1367:108:8"
          }
        ],
        "id": 8744,
        "name": "ContractDefinition",
        "src": "629:848:8"
      }
    ],
    "id": 8745,
    "name": "SourceUnit",
    "src": "0:1478:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.15+commit.6a57276f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-12-27T16:15:59.580Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "methods": {},
    "title": "Counters"
  },
  "userdoc": {
    "methods": {}
  }
}